@page "/organiseTournament/{tournamentId:guid}"
@inject NavigationManager NavigationManager
@inject IGroupService GroupService
@inject IPlayerService PlayerService
@inject States.TournamentState TournamentState
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<h1>
    Organise tournament
</h1>

@if (TournamentState.TournamentDto.Seeding == "Custom")
{
    <h1>@TournamentState.TournamentDto.Name</h1>
    <div class="row">
        <div class="col-md-4">
            <form>
                <div class="form-group">
                    <label for="Name" class="control-label">Name</label>
                    <input for="Name" class="form-control" @bind-value="@group.Name" />

                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-primary" @onclick="CreateGroupAsync">Save</button>
                    <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>
                </div>
            </form>
        </div>
    </div>
}
else
{
    <h1>@TournamentState.TournamentDto.Name</h1>
    <div class="row">
        <div class="col-md-4">
            <form>
                <div class="form-group">
                    <label for="Name" class="control-label">Name</label>
                    <input for="Name" class="form-control" @bind-value="@group.Name" />

                </div>
                <div class="form-group">
                    <button type="button" class="btn btn-primary" @onclick="CreateGroupAsync">Save</button>
                    <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>
                </div>
            </form>
        </div>
    </div>
}


@code {
    GroupDto group = new GroupDto();
    ParticipantDto participant = new ParticipantDto();

    [Parameter]
    public Guid tournamentId { get; set; }
    
    protected async Task CreateGroupAsync()
    {
        group.Id = Guid.NewGuid();
        group.TournamentId = tournamentId;
        await GroupService.CreateGroupAsync(group);
        NavigationManager.NavigateTo("/organiseTournament");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/organiseTournament");
    }
}