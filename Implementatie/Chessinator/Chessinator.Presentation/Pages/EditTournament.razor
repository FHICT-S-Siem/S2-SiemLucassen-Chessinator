@page "/editTournament/{Id:guid}"
@inject ITournamentService TournamentService
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime;


<div class="row">
    <div class="col-md-4">
        <EditForm Model="_tournament">
            <div class="form-group">
                <input type="hidden" @bind-value="@_tournament.Id" />

                <label for="Name" class="control-label">Name</label>
                <input for="Name" class="form-control" @bind-value="@_tournament.Name" />
                <br />
                <label for="Type" class="control-label">Type</label>
                <br />
                <InputSelect id="Type" class="form-select" @bind-Value="@_tournament.Type">
                    <option value="">Select a tournament-type...</option>
                    <option value="Swiss">Swiss</option>
                    <option value="Survival">Survival</option>
                    <option value="Championship Match">Championship Match</option>
                </InputSelect>
                <br />
                <label for="Seeding" class="control-label">Seeding</label>
                <br />
                <InputSelect id="Seeding" class="form-select" @bind-Value="@_tournament.Seeding">
                    <option value="">Select a seeding...</option>
                    <option value="Custom">Custom</option>
                    <option value="Random">Random</option>
                </InputSelect>
                <br />
                <label for="Time" class="control-label">Time</label>
                <br />
                <InputSelect id="Time" class="form-select" @bind-Value="@_tournament.Time">
                    <option value="">Select a time-standard...</option>
                    <option value="Bullet">Bullet</option>
                    <option value="Blitz">Blitz</option>
                    <option value="Rapid">Rapid</option>
                    <option value="Classic">Classic</option>
                </InputSelect>
            </div>

            <div class="form-group">
                <button type="button" class="btn btn-primary" @onclick="UpdateTournament">Update tournament</button>
                <button type="button" class="btn btn-danger" @onclick="Cancel">Cancel</button>
            </div>
        </EditForm>
    </div>

</div>


@code  {
    [Parameter]
    public Guid Id { get; set; }

    TournamentDto _tournament = new TournamentDto();

    protected override async Task OnInitializedAsync()
    {
        _tournament = await TournamentService.GetTournamentByIdAsync(Id);
    }

    protected async Task UpdateTournament()
    {
        if (string.IsNullOrEmpty(_tournament.Name) || string.IsNullOrEmpty(_tournament.Type) || string.IsNullOrEmpty(_tournament.Seeding) || string.IsNullOrEmpty(_tournament.Time))
        {
            string alert = await JsRuntime.InvokeAsync<string>("alert", "Fill in all fields before editing a tournament");
            return;
        }

        try
        {
            await TournamentService.UpdateTournamentAsync(_tournament);
            NavigationManager.NavigateTo("/fetchTournament");
        }
        catch (Exception e)
        {
            var alert = await JsRuntime.InvokeAsync<string>("alert", e.Message);
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/fetchTournament");
    }
}
