@page "/Data/People"

@using DataAccessLibrary
@using DataAccessLibrary.Models
@*@using Chessinator.Presentation.Models*@

@inject IPeopleData _db

<h3>People</h3>

<h4>Insert new person</h4>

<EditForm Model="@newPerson" OnValidSubmit="@InsertPerson">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText id="firstname" @bind-Value="newPerson.FirstName"></InputText>
    <InputText id="lastname" @bind-Value="newPerson.LastName"></InputText>
    <InputText id="emailadress" @bind-Value="newPerson.EmailAdress"></InputText>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<h4>Current People</h4>
@if (people is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Firstname</th>
                <th>Lastname</th>
                <th>Email address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var person in people)
            {
                <tr>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.EmailAdress</td>
                </tr>
            }
        </tbody>

    </table>
}
@code {
    private List<PersonModel> people;
    private PersonModel newPerson = new PersonModel();
    //private DisplayPersonModel newPerson = new DisplayPersonModel();

    protected override async Task OnInitializedAsync()
    {
        people = await _db.GetPeople();
    }

    private Task InsertPerson()
    {
        //PersonModel p = new PersonModel
        //{
        //    FirstName = newPerson.FirstName,
        //    LastName = newPerson.LastName,
        //    EmailAdress = newPerson.EmailAdress
        //};

        //await _db.InsertPerson(p);

        //people.Add(p);

        //newPerson = new DisplayPersonModel();
        return Task.CompletedTask;
    }
}
